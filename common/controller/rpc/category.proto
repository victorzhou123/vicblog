syntax = "proto3";

package category;

import "google/protobuf/empty.proto";
import "common/controller/rpc/common.proto";

option go_package = "github.com/victorzhou123/vicblog/common/controller/rpc";

service CategoryService {
    rpc AddCategory(CategoryName) returns (google.protobuf.Empty) {};
    rpc ListCategoryByPagination(common.Pagination) returns (CategoryList) {};
    rpc ListCategories(common.Amount) returns (CategoriesWithRelatedArticleAmount) {};
    rpc GetArticleCategory(common.Id) returns (Category) {};
    rpc GetTotalNumberOfCategories(google.protobuf.Empty) returns (common.Amount) {};
    rpc DelCategory(common.Id) returns (google.protobuf.Empty) {};
    rpc GetRelationWithArticle(common.Id) returns (common.Id) {};
    rpc GetRelatedArticleIdsThroughCateId(common.Id) returns (RespGetRelatedArticleIdsThroughCateId) {};
    rpc BuildRelationWithArticle(ArticleIdAndCateId) returns (google.protobuf.Empty) {};
    rpc RemoveRelationWithArticle(common.Id) returns (google.protobuf.Empty) {};
}

message CategoryName {
    string name = 1;
}

message Category {
    string id = 1;
    string name = 2;
    int64 createdAt = 3;
}

message CategoryWithRelatedArticleAmount {
    Category category = 1;
    int64 relatedArticleAmount = 2;
}

message CategoriesWithRelatedArticleAmount {
    repeated CategoryWithRelatedArticleAmount categories = 1;
}

message CategoryList {
    common.PaginationStatus paginationStatus = 1;
    repeated CategoryWithRelatedArticleAmount categories = 2;
}

message RespGetRelatedArticleIdsThroughCateId {
    repeated common.Id ids = 1;
}

message ArticleIdAndCateId {
    common.Id articleId = 1;
    common.Id cateId = 2;
}
