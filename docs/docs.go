// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "VictorZhou",
            "email": "victorzhoux@163.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/article/list": {
            "post": {
                "description": "list all articles of request user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Article"
                ],
                "summary": "List articles",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.ArticleListDto"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/article/{id}": {
            "delete": {
                "description": "delete one article of request user",
                "tags": [
                    "Article"
                ],
                "summary": "delete article",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "article ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/v1/admin/category": {
            "get": {
                "description": "list category with pagination",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "current page of user queried",
                        "name": "current",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "single page size of user queried",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/app.ArticleListDto"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "add a category item",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Add category",
                "parameters": [
                    {
                        "description": "body of add category",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqCategory"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/admin/category/{id}": {
            "delete": {
                "description": "delete one category",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id of category, which user want to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/admin/tag": {
            "post": {
                "description": "add a tag item",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Add tag",
                "parameters": [
                    {
                        "description": "body of add tag",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqTag"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "delete a tag item",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "description": "body of add tag",
                        "name": "path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqTag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "body of login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reqLogin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/app.UserAndTokenDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.ArticleListDto": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPublish": {
                    "type": "boolean"
                },
                "isTop": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "app.UserAndTokenDto": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controller.reqCategory": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.reqLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controller.reqTag": {
            "type": "object",
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "vicBlog server API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
