basePath: /api
definitions:
  app.UserAndTokenDto:
    properties:
      email:
        type: string
      token:
        type: string
      username:
        type: string
    type: object
  controller.reqArticle:
    properties:
      categoryId:
        type: integer
      content:
        type: string
      cover:
        type: string
      summary:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
    type: object
  controller.reqCategory:
    properties:
      name:
        type: string
    type: object
  controller.reqLogin:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controller.reqTag:
    properties:
      names:
        items:
          type: string
        type: array
    type: object
  dto.ArticleDetailDto:
    properties:
      category:
        type: integer
      content:
        type: string
      cover:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      isPublish:
        type: boolean
      isTop:
        type: boolean
      owner:
        type: string
      readTimes:
        type: integer
      summary:
        type: string
      tags:
        items:
          type: integer
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
  service.ArticleDto:
    properties:
      cover:
        type: string
      createTime:
        type: string
      id:
        type: integer
      isPublish:
        type: boolean
      isTop:
        type: boolean
      title:
        type: string
    type: object
  service.ArticleListDto:
    properties:
      articles:
        items:
          $ref: '#/definitions/service.ArticleDto'
        type: array
      current:
        type: integer
      pages:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  service.CategoryDto:
    properties:
      createTime:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  service.CategoryListDto:
    properties:
      category:
        items:
          $ref: '#/definitions/service.CategoryDto'
        type: array
      current:
        type: integer
      pages:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  service.FileUrlDto:
    properties:
      url:
        type: string
    type: object
  service.TagDto:
    properties:
      createTime:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  service.TagListDto:
    properties:
      current:
        type: integer
      pages:
        type: integer
      size:
        type: integer
      tag:
        items:
          $ref: '#/definitions/service.TagDto'
        type: array
      total:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: victorzhoux@163.com
    name: VictorZhou
  title: vicBlog server API
  version: "1.0"
paths:
  /v1/admin/article:
    post:
      consumes:
      - application/json
      description: add an article
      parameters:
      - description: body of add article
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqArticle'
      responses:
        "201":
          description: Created
      summary: add article
      tags:
      - Article
  /v1/admin/article/{id}:
    delete:
      description: delete one article of request user
      parameters:
      - description: article ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: delete article
      tags:
      - Article
  /v1/admin/article/list:
    get:
      consumes:
      - application/json
      description: list articles of request user by pagination
      parameters:
      - description: current page of user queried
        in: query
        name: current
        required: true
        type: integer
      - description: single page size of user queried
        in: query
        name: size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.ArticleListDto'
            type: array
      summary: List articles
      tags:
      - Article
  /v1/admin/article/picture:
    post:
      consumes:
      - application/json
      description: upload users picture
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/service.FileUrlDto'
      summary: Upload file
      tags:
      - Util
  /v1/admin/category:
    get:
      consumes:
      - application/json
      description: list category with pagination
      parameters:
      - description: current page of user queried
        in: query
        name: current
        required: true
        type: integer
      - description: single page size of user queried
        in: query
        name: size
        required: true
        type: integer
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/service.CategoryDto'
            type: array
      summary: List category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: add a category item
      parameters:
      - description: body of add category
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqCategory'
      responses: {}
      summary: Add category
      tags:
      - Category
  /v1/admin/category/{id}:
    delete:
      consumes:
      - application/json
      description: delete one category
      parameters:
      - description: id of category, which user want to delete
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete category
      tags:
      - Category
  /v1/admin/tag:
    delete:
      consumes:
      - application/json
      description: delete a tag item
      parameters:
      - description: body of add tag
        in: body
        name: path
        required: true
        schema:
          $ref: '#/definitions/controller.reqTag'
      responses:
        "200":
          description: OK
      summary: Delete tag
      tags:
      - Tag
    get:
      consumes:
      - application/json
      description: list tag with pagination
      parameters:
      - description: current page of user queried
        in: query
        name: current
        required: true
        type: integer
      - description: single page size of user queried
        in: query
        name: size
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.TagListDto'
            type: array
      summary: List tag
      tags:
      - Tag
    post:
      consumes:
      - application/json
      description: add a tag item
      parameters:
      - description: body of add tag
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqTag'
      responses: {}
      summary: Add tag
      tags:
      - Tag
  /v1/login:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: body of login
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqLogin'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/app.UserAndTokenDto'
      summary: Login
      tags:
      - Login
swagger: "2.0"
